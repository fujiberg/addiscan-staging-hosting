{"version":3,"sources":["webpack:///src/app/components/camera/camera.component.ts","webpack:///src/app/components/camera/camera.component.html","webpack:///src/app/components/camera-ui/camera-ui.component.html","webpack:///src/app/components/camera-ui/camera-ui.component.ts","webpack:///src/app/pages/add-product/add-product.page.html","webpack:///src/app/pages/add-product/add-product.page.ts","webpack:///src/app/pages/add-product/add-product-routing.module.ts","webpack:///src/app/pages/add-product/add-product.module.ts"],"names":["CameraComponent","CameraPreview","cameraPreviewOptions","position","className","toBack","parent","_cameraState","captured","format","output","capture","image","source","outputFormat","Promise","resolve","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","height","naturalHeight","width","naturalWidth","drawImage","dataURL","toDataURL","replace","src","value","this","emit","start","stop","cameraState","CameraUiComponent","allowSkip","capturedPicture","AddProductPage","AddProductPageRoutingModule","AddProductPageModule","Steps","front","back","ingredients","extra","save","routes","path","component","activatedRoute","productsApiService","router","step","steps","images","nutrients","data","push","product","ean","snapshot","paramMap","get","body","name","brand","origin","uploadingText","productsAddProduct","toPromise","upload","id","count","navigate","replaceUrl","usage","productsAddProductImage","productGuid","mimeType","forChild"],"mappings":"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","file":"x","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  CameraPreviewOptions,\n  CameraPreviewPlugin,\n} from \"@capacitor-community/camera-preview\";\nimport { Plugins } from \"@capacitor/core\";\nimport { ViewDidLeave, ViewWillEnter, ViewWillLeave } from \"@ionic/angular\";\n\nconst CameraPreview = Plugins.CameraPreview as CameraPreviewPlugin;\n\nasync function convertImage(\n  source: string,\n  outputFormat: ImageFormat,\n): Promise<string> {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.crossOrigin = \"Anonymous\";\n    img.onload = function () {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.height = img.naturalHeight;\n      canvas.width = img.naturalWidth;\n      ctx.drawImage(img, 0, 0);\n      const dataURL = canvas.toDataURL(outputFormat);\n      resolve(dataURL.replace(/data:image\\/[^;]+;base64,/, \"\"));\n    };\n    img.src = `data:image/xxx;base64,${source}`;\n  });\n}\n\nconst cameraPreviewOptions: CameraPreviewOptions = {\n  position: \"rear\",\n  className: \"fullscreen-video\",\n  // disableAudio: true, TODO Add when support is merged by component team\n  toBack: true,\n  parent: \"preview\",\n};\n\ntype CameraState = \"off\" | \"on\" | \"starting\" | \"stopping\";\nexport type ImageFormat = \"image/jpeg\" | \"image/png\" | \"image/webp\";\n\n@Component({\n  selector: \"app-camera\",\n  templateUrl: \"./camera.component.html\",\n  styleUrls: [\"./camera.component.scss\"],\n})\nexport class CameraComponent\n  implements\n    AfterViewInit,\n    ViewWillEnter,\n    ViewDidLeave,\n    ViewWillLeave,\n    OnDestroy,\n    OnInit {\n  private _cameraState: CameraState = \"off\";\n  public get cameraState(): CameraState {\n    return this._cameraState;\n  }\n  @Output()\n  public readonly captured = new EventEmitter<string>();\n\n  @Input()\n  public format: ImageFormat = \"image/jpeg\";\n\n  public constructor() {}\n\n  public async capture(): Promise<void> {\n    const output = await CameraPreview.capture({});\n    const image = await convertImage(output.value, this.format);\n    this.captured.emit(image);\n  }\n\n  public ionViewWillEnter(): void {\n    void this.start();\n  }\n\n  public ionViewDidLeave(): void {\n    void this.stop();\n  }\n\n  public ionViewWillLeave(): void {\n    void this.stop();\n  }\n\n  public ngAfterViewInit(): void {\n    void this.start();\n  }\n\n  public ngOnInit(): void {\n    void this.start();\n  }\n\n  public ngOnDestroy(): void {\n    void this.stop();\n  }\n\n  private async start(): Promise<void> {\n    if (this.cameraState != \"off\") {\n      return;\n    }\n\n    try {\n      this._cameraState = \"starting\";\n      await CameraPreview.start(cameraPreviewOptions);\n      this._cameraState = \"on\";\n    } catch {\n      this._cameraState = \"off\";\n    }\n  }\n\n  private async stop(): Promise<void> {\n    try {\n      this._cameraState = \"stopping\";\n      await CameraPreview.stop();\n    } finally {\n      this._cameraState = \"off\";\n    }\n  }\n}\n","<div id=\"preview\" class=\"camera-preview\"></div>\n\n<div class=\"starting-container\" [class.starting]=\"cameraState == 'starting'\">\n  <div class=\"starting-message\">\n    <div class=\"starting-spinner\">\n      <ion-spinner name=\"bubbles\"></ion-spinner>\n    </div>\n    <div class=\"starting-text\">Starting camera...</div>\n  </div>\n</div>\n\n<ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"center\">\n  <ion-fab-button (click)=\"capture()\">\n    <ion-icon icon=\"camera-outline\"></ion-icon>\n  </ion-fab-button>\n</ion-fab>\n","<div class=\"camera-overlay\">\n  <ng-content></ng-content>\n  <ion-fab-button\n    *ngIf=\"!capturedPicture && allowSkip\"\n    class=\"skip-button\"\n    (click)=\"confirm()\"\n    color=\"light\"\n  >\n    <ion-icon name=\"return-up-forward-outline\"></ion-icon>\n  </ion-fab-button>\n</div>\n\n<app-camera\n  *ngIf=\"!capturedPicture\"\n  [format]=\"format\"\n  (captured)=\"capturedPicture = $event\"\n></app-camera>\n\n<div class=\"snap\" *ngIf=\"!!capturedPicture\">\n  <div class=\"snap-img\">\n    <img [src]=\"'data:image/jpeg;base64,' + capturedPicture\" />\n  </div>\n  <div class=\"snap-question\">\n    <div class=\"question\">Accept this photo?</div>\n    <div class=\"buttons\">\n      <ion-button (click)=\"retake()\">retake</ion-button>\n      <ion-button (click)=\"confirm()\">ok!</ion-button>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ImageFormat } from \"../camera/camera.component\";\n\n@Component({\n  selector: \"app-camera-ui\",\n  templateUrl: \"./camera-ui.component.html\",\n  styleUrls: [\"./camera-ui.component.scss\"],\n})\nexport class CameraUiComponent {\n  @Input()\n  public format: ImageFormat = \"image/jpeg\";\n\n  @Input() public allowSkip = false;\n  @Output()\n  public readonly captured = new EventEmitter<string>();\n\n  public capturedPicture: string;\n\n  public constructor() {}\n\n  public retake(): void {\n    this.capturedPicture = undefined;\n  }\n\n  public confirm(): void {\n    this.captured.emit(this.capturedPicture);\n    this.capturedPicture = undefined;\n  }\n}\n","<ng-container [ngSwitch]=\"step\">\n  <ng-container *ngSwitchCase=\"steps.front\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the front of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.back\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the back of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.ingredients\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the ingredients of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.extra\">\n    <app-camera-ui (captured)=\"doStep($event)\" allowSkip=\"true\">\n      <div class=\"usage\">Take extra photos of the item, or press skip.</div>\n    </app-camera-ui>\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.save\">\n    <div class=\"uploading-container\">\n      <div class=\"uploading-message\">\n        <div class=\"uploading-spinner\">\n          <ion-spinner name=\"bubbles\"></ion-spinner>\n        </div>\n        <div class=\"uploading-text\">Uploading {{uploadingText}}...</div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApiProductRequest, ProductsApiService } from \"src/app/api\";\n\nenum Steps {\n  front,\n  back,\n  ingredients,\n  extra,\n  save,\n}\n\n@Component({\n  selector: \"app-add-product\",\n  templateUrl: \"./add-product.page.html\",\n  styleUrls: [\"./add-product.page.scss\"],\n})\nexport class AddProductPage {\n  public step = Steps.front;\n  public readonly steps = Steps;\n  public uploadingText: string;\n\n  private readonly images = {\n    front: undefined as string,\n    back: undefined as string,\n    nutrients: undefined as string,\n    ingredients: undefined as string,\n    extra: [] as string[],\n  };\n\n  public constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly productsApiService: ProductsApiService,\n    private readonly router: Router,\n  ) {}\n\n  public doStep(data: string): void {\n    switch (this.step) {\n      case Steps.front:\n        this.images.front = data;\n        this.step = Steps.back;\n        break;\n      case Steps.back:\n        this.images.back = data;\n        this.step = Steps.ingredients;\n        break;\n      case Steps.ingredients:\n        this.images.ingredients = data;\n        this.step = Steps.extra;\n        break;\n      case Steps.extra:\n        if (data) {\n          this.images.extra.push(data);\n        } else {\n          this.step = Steps.save;\n          void this.save();\n        }\n        break;\n    }\n  }\n\n  public async save(): Promise<void> {\n    const ean = this.activatedRoute.snapshot.paramMap.get(\"ean\");\n\n    const body: ApiProductRequest = {\n      ean,\n      name: ean,\n      brand: null,\n      origin: \"App upload\",\n    };\n\n    this.uploadingText = \"product info\";\n    const product = await this.productsApiService\n      .productsAddProduct({ body })\n      .toPromise();\n\n    if (this.images.front) {\n      this.uploadingText = \"front\";\n      await this.upload(product.id, \"front\", this.images.front);\n    }\n    if (this.images.back) {\n      this.uploadingText = \"back\";\n      await this.upload(product.id, \"back\", this.images.back);\n    }\n    if (this.images.ingredients) {\n      this.uploadingText = \"ingredients\";\n      await this.upload(product.id, \"ingredients\", this.images.ingredients);\n    }\n\n    let count = 0;\n    for (const extra of this.images.extra) {\n      this.uploadingText = `extra ${count++}`;\n      await this.upload(product.id, \"extra\", extra);\n    }\n\n    this.uploadingText = \"done\";\n\n    await this.router.navigate([\"product\", product.id], { replaceUrl: true });\n  }\n\n  private async upload(\n    id: string,\n    usage: string,\n    image: string,\n  ): Promise<void> {\n    await this.productsApiService\n      .productsAddProductImage({\n        productGuid: id,\n        body: {\n          mimeType: \"image/jpeg\",\n          usage: usage,\n          data: image,\n        },\n      })\n      .toPromise();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddProductPage } from './add-product.page';\n\nconst routes: Routes = [\n  {\n    path: ':ean',\n    component: AddProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddProductPageRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { AddProductPageRoutingModule } from \"./add-product-routing.module\";\n\nimport { AddProductPage } from \"./add-product.page\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ComponentsModule } from \"src/app/components/components.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    AddProductPageRoutingModule,\n    TranslateModule,\n  ],\n  declarations: [AddProductPage],\n})\nexport class AddProductPageModule {}\n"]}