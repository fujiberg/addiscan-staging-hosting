{"version":3,"sources":["webpack:///src/app/components/camera/camera.component.ts","webpack:///src/app/components/camera/camera.component.html","webpack:///src/app/components/camera-ui/camera-ui.component.html","webpack:///src/app/components/camera-ui/camera-ui.component.ts","webpack:///src/app/pages/add-product/add-product.page.html","webpack:///src/app/pages/add-product/add-product.page.ts","webpack:///src/app/pages/add-product/add-product-routing.module.ts","webpack:///src/app/pages/add-product/add-product.module.ts"],"names":["CameraPreview","cameraPreviewOptions","position","className","toBack","parent","CameraComponent","_cameraState","captured","format","this","output","capture","image","source","outputFormat","Promise","resolve","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","height","naturalHeight","width","naturalWidth","drawImage","dataURL","toDataURL","replace","src","value","emit","start","stop","cameraState","CameraUiComponent","allowSkip","capturedPicture","undefined","Steps","front","back","ingredients","extra","save","routes","path","component","AddProductPage","activatedRoute","productsApiService","router","step","steps","images","nutrients","data","push","ean","snapshot","paramMap","get","body","name","brand","origin","uploadingText","product","productsAddProduct","toPromise","upload","id","count","navigate","replaceUrl","usage","productsAddProductImage","productGuid","mimeType","AddProductPageRoutingModule","forChild","AddProductPageModule"],"mappings":"gPAgBA,MAAMA,E,UAAgB,EAAQA,cAsBxBC,EAA6C,CACjDC,SAAU,OACVC,UAAW,mBAEXC,QAAQ,EACRC,OAAQ,WAWH,Y,MAAMC,EAkBX,cAVQ,KAAAC,aAA4B,MAKpB,KAAAC,SAAW,IAAI,IAGxB,KAAAC,OAAsB,aAP7B,kBACE,OAAOC,KAAKH,aAUD,U,mDACX,MAAMI,QAAeX,EAAcY,QAAQ,IACrCC,QA1DV,SACEC,EACAC,G,mDAEA,OAAO,IAAIC,QAASC,IAClB,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,OAAS,WACX,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAC9BJ,EAAOK,OAAST,EAAIU,cACpBN,EAAOO,MAAQX,EAAIY,aACnBL,EAAIM,UAAUb,EAAK,EAAG,GACtB,MAAMc,EAAUV,EAAOW,UAAUlB,GACjCE,EAAQe,EAAQE,QAAQ,4BAA6B,MAEvDhB,EAAIiB,IAAM,yBAAyBrB,OAhBvC,CA0DqCH,EAAOyB,MAAO1B,KAAKD,QACpDC,KAAKF,SAAS6B,KAAKxB,MAGd,mBACAH,KAAK4B,QAGL,kBACA5B,KAAK6B,OAGL,mBACA7B,KAAK6B,OAGL,kBACA7B,KAAK4B,QAGL,WACA5B,KAAK4B,QAGL,cACA5B,KAAK6B,OAGE,Q,mDACZ,GAAwB,OAApB7B,KAAK8B,YAIT,IACE9B,KAAKH,aAAe,iBACdP,EAAcsC,MAAMrC,GAC1BS,KAAKH,aAAe,KACpB,SACAG,KAAKH,aAAe,UAIV,O,mDACZ,IACEG,KAAKH,aAAe,iBACdP,EAAcuC,O,QAEpB7B,KAAKH,aAAe,W,6CArEbD,I,uBAAAA,EAAe,2XCtD5B,gBAEA,gBACE,gBACE,gBACE,wBACF,OACA,gBAA2B,6BAAkB,OAC/C,OACF,OAEA,oBACE,2BAAgB,gCAAS,EAAAM,aACvB,qBACF,OACF,Q,MAbgC,qD,2wBDoDzB,G,uCEpDL,2BAGE,4DAGA,qBACF,Q,uCAGF,uBAGE,wEACD,O,uBAFC,yB,uCAIF,gBACE,gBACE,gBACF,OACA,iBACE,iBAAsB,6BAAkB,OACxC,iBACE,wBAAY,2DAAmB,iBAAM,OACrC,wBAAY,4DAAoB,eAAG,OACrC,OACF,OACF,O,uBATS,sE,cCZF,Y,MAAM6B,EAUX,cARO,KAAAhC,OAAsB,aAEb,KAAAiC,WAAY,EAEZ,KAAAlC,SAAW,IAAI,IAMxB,SACLE,KAAKiC,qBAAkBC,EAGlB,UACLlC,KAAKF,SAAS6B,KAAK3B,KAAKiC,iBACxBjC,KAAKiC,qBAAkBC,G,6CAlBdH,I,uBAAAA,EAAiB,0gB,ODR9B,gBACE,QACA,iCAQF,OAEA,6BAMA,wB,MAfI,qDAUF,wCAKgB,2C,s0CCVX,G,uECPL,QACE,0BAAe,gEACb,gBAAmB,iDAAsC,OAC3D,OAEA,oBACE,2BACE,qBACF,OACF,OACF,O,MAJoB,sC,uCAMpB,QACE,0BAAe,gEACb,gBAAmB,gDAAqC,OAC1D,OAEA,oBACE,2BACE,qBACF,OACF,OACF,O,MAJoB,sC,uCAMpB,QACE,0BAAe,gEACb,gBAAmB,uDAA4C,OACjE,OAEA,oBACE,2BACE,qBACF,OACF,OACF,O,MAJoB,sC,uCAMpB,QACE,0BAAe,gEACb,gBAAmB,wDAA6C,OAClE,OACA,oBACE,2BACE,qBACF,OACF,OACF,O,MAJoB,sC,yBAMpB,QACE,gBACE,gBACE,iBACE,yBACF,OACA,iBAA4B,QAA8B,OAC5D,OACF,OACF,Q,oBAHkC,kDClDpC,IAAKI,EAAL,SAAKA,G,OACH,IAAAC,MAAA,WACA,IAAAC,KAAA,UACA,IAAAC,YAAA,iBACA,IAAAC,MAAA,WACA,IAAAC,KAAA,UALGL,EAAL,CAMC,ICLD,MAAMM,EAAiB,CACrB,CACEC,KAAM,OACNC,UDSG,M,MAAMC,EAaX,YACmBC,EACAC,EACAC,GAFA,KAAAF,iBACA,KAAAC,qBACA,KAAAC,SAfZ,KAAAC,KAAOb,EAAMC,MACJ,KAAAa,MAAQd,EAGP,KAAAe,OAAS,CACxBd,WAAOF,EACPG,UAAMH,EACNiB,eAAWjB,EACXI,iBAAaJ,EACbK,MAAO,IASF,OAAOa,GACZ,OAAQpD,KAAKgD,MACX,KAAKb,EAAMC,MACTpC,KAAKkD,OAAOd,MAAQgB,EACpBpD,KAAKgD,KAAOb,EAAME,KAClB,MACF,KAAKF,EAAME,KACTrC,KAAKkD,OAAOb,KAAOe,EACnBpD,KAAKgD,KAAOb,EAAMG,YAClB,MACF,KAAKH,EAAMG,YACTtC,KAAKkD,OAAOZ,YAAcc,EAC1BpD,KAAKgD,KAAOb,EAAMI,MAClB,MACF,KAAKJ,EAAMI,MACLa,EACFpD,KAAKkD,OAAOX,MAAMc,KAAKD,IAEvBpD,KAAKgD,KAAOb,EAAMK,KACbxC,KAAKwC,SAML,O,mDACX,MAAMc,EAAMtD,KAAK6C,eAAeU,SAASC,SAASC,IAAI,OAEhDC,EAA0B,CAC9BJ,MACAK,KAAML,EACNM,MAAO,KACPC,OAAQ,cAGV7D,KAAK8D,cAAgB,eACrB,MAAMC,QAAgB/D,KAAK8C,mBACxBkB,mBAAmB,CAAEN,SACrBO,YAECjE,KAAKkD,OAAOd,QACdpC,KAAK8D,cAAgB,cACf9D,KAAKkE,OAAOH,EAAQI,GAAI,QAASnE,KAAKkD,OAAOd,QAEjDpC,KAAKkD,OAAOb,OACdrC,KAAK8D,cAAgB,aACf9D,KAAKkE,OAAOH,EAAQI,GAAI,OAAQnE,KAAKkD,OAAOb,OAEhDrC,KAAKkD,OAAOZ,cACdtC,KAAK8D,cAAgB,oBACf9D,KAAKkE,OAAOH,EAAQI,GAAI,cAAenE,KAAKkD,OAAOZ,cAG3D,IAAI8B,EAAQ,EACZ,IAAK,MAAM7B,KAASvC,KAAKkD,OAAOX,MAC9BvC,KAAK8D,cAAgB,SAASM,UACxBpE,KAAKkE,OAAOH,EAAQI,GAAI,QAAS5B,GAGzCvC,KAAK8D,cAAgB,aAEf9D,KAAK+C,OAAOsB,SAAS,CAAC,UAAWN,EAAQI,IAAK,CAAEG,YAAY,OAGtD,OACZH,EACAI,EACApE,G,yDAEMH,KAAK8C,mBACR0B,wBAAwB,CACvBC,YAAaN,EACbT,KAAM,CACJgB,SAAU,aACVH,MAAOA,EACPnB,KAAMjD,KAGT8D,gB,6CAjGMrB,GAAc,gC,uBAAdA,EAAc,4ZDjB3B,UACE,+BAYA,+BAYA,+BAYA,+BAWA,+BAUF,Q,MA1Dc,wBACE,2CAYA,0CAYA,iDAYA,2CAWA,4C,oiBC/BT,KCDA,Y,MAAM+B,G,8BAAAA,I,oDAAAA,IAA2B,SAH7B,CAAC,IAAaC,SAASnC,IACtB,O,GAEL,G,4BCOA,Y,MAAMoC,G,8BAAAA,I,oDAAAA,IAAoB,SAVtB,CACP,IACA,IACA,IACA,IACA,EACA,Q,GAIG","file":"x","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  CameraPreviewOptions,\n  CameraPreviewPlugin,\n} from \"@capacitor-community/camera-preview\";\nimport { Plugins } from \"@capacitor/core\";\nimport { ViewDidLeave, ViewWillEnter, ViewWillLeave } from \"@ionic/angular\";\n\nconst CameraPreview = Plugins.CameraPreview as CameraPreviewPlugin;\n\nasync function convertImage(\n  source: string,\n  outputFormat: ImageFormat,\n): Promise<string> {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.crossOrigin = \"Anonymous\";\n    img.onload = function () {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.height = img.naturalHeight;\n      canvas.width = img.naturalWidth;\n      ctx.drawImage(img, 0, 0);\n      const dataURL = canvas.toDataURL(outputFormat);\n      resolve(dataURL.replace(/data:image\\/[^;]+;base64,/, \"\"));\n    };\n    img.src = `data:image/xxx;base64,${source}`;\n  });\n}\n\nconst cameraPreviewOptions: CameraPreviewOptions = {\n  position: \"rear\",\n  className: \"fullscreen-video\",\n  // disableAudio: true, TODO Add when support is merged by component team\n  toBack: true,\n  parent: \"preview\",\n};\n\ntype CameraState = \"off\" | \"on\" | \"starting\" | \"stopping\";\nexport type ImageFormat = \"image/jpeg\" | \"image/png\" | \"image/webp\";\n\n@Component({\n  selector: \"app-camera\",\n  templateUrl: \"./camera.component.html\",\n  styleUrls: [\"./camera.component.scss\"],\n})\nexport class CameraComponent\n  implements\n    AfterViewInit,\n    ViewWillEnter,\n    ViewDidLeave,\n    ViewWillLeave,\n    OnDestroy,\n    OnInit {\n  private _cameraState: CameraState = \"off\";\n  public get cameraState(): CameraState {\n    return this._cameraState;\n  }\n  @Output()\n  public readonly captured = new EventEmitter<string>();\n\n  @Input()\n  public format: ImageFormat = \"image/jpeg\";\n\n  public constructor() {}\n\n  public async capture(): Promise<void> {\n    const output = await CameraPreview.capture({});\n    const image = await convertImage(output.value, this.format);\n    this.captured.emit(image);\n  }\n\n  public ionViewWillEnter(): void {\n    void this.start();\n  }\n\n  public ionViewDidLeave(): void {\n    void this.stop();\n  }\n\n  public ionViewWillLeave(): void {\n    void this.stop();\n  }\n\n  public ngAfterViewInit(): void {\n    void this.start();\n  }\n\n  public ngOnInit(): void {\n    void this.start();\n  }\n\n  public ngOnDestroy(): void {\n    void this.stop();\n  }\n\n  private async start(): Promise<void> {\n    if (this.cameraState != \"off\") {\n      return;\n    }\n\n    try {\n      this._cameraState = \"starting\";\n      await CameraPreview.start(cameraPreviewOptions);\n      this._cameraState = \"on\";\n    } catch {\n      this._cameraState = \"off\";\n    }\n  }\n\n  private async stop(): Promise<void> {\n    try {\n      this._cameraState = \"stopping\";\n      await CameraPreview.stop();\n    } finally {\n      this._cameraState = \"off\";\n    }\n  }\n}\n","<div id=\"preview\" class=\"camera-preview\"></div>\n\n<div class=\"starting-container\" [class.starting]=\"cameraState == 'starting'\">\n  <div class=\"starting-message\">\n    <div class=\"starting-spinner\">\n      <ion-spinner name=\"bubbles\"></ion-spinner>\n    </div>\n    <div class=\"starting-text\">Starting camera...</div>\n  </div>\n</div>\n\n<ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"center\">\n  <ion-fab-button (click)=\"capture()\">\n    <ion-icon icon=\"camera-outline\"></ion-icon>\n  </ion-fab-button>\n</ion-fab>\n","<div class=\"camera-overlay\">\n  <ng-content></ng-content>\n  <ion-fab-button\n    *ngIf=\"!capturedPicture && allowSkip\"\n    class=\"skip-button\"\n    (click)=\"confirm()\"\n    color=\"light\"\n  >\n    <ion-icon name=\"return-up-forward-outline\"></ion-icon>\n  </ion-fab-button>\n</div>\n\n<app-camera\n  *ngIf=\"!capturedPicture\"\n  [format]=\"format\"\n  (captured)=\"capturedPicture = $event\"\n></app-camera>\n\n<div class=\"snap\" *ngIf=\"!!capturedPicture\">\n  <div class=\"snap-img\">\n    <img [src]=\"'data:image/jpeg;base64,' + capturedPicture\" />\n  </div>\n  <div class=\"snap-question\">\n    <div class=\"question\">Accept this photo?</div>\n    <div class=\"buttons\">\n      <ion-button (click)=\"retake()\">retake</ion-button>\n      <ion-button (click)=\"confirm()\">ok!</ion-button>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ImageFormat } from \"../camera/camera.component\";\n\n@Component({\n  selector: \"app-camera-ui\",\n  templateUrl: \"./camera-ui.component.html\",\n  styleUrls: [\"./camera-ui.component.scss\"],\n})\nexport class CameraUiComponent {\n  @Input()\n  public format: ImageFormat = \"image/jpeg\";\n\n  @Input() public allowSkip = false;\n  @Output()\n  public readonly captured = new EventEmitter<string>();\n\n  public capturedPicture: string;\n\n  public constructor() {}\n\n  public retake(): void {\n    this.capturedPicture = undefined;\n  }\n\n  public confirm(): void {\n    this.captured.emit(this.capturedPicture);\n    this.capturedPicture = undefined;\n  }\n}\n","<ng-container [ngSwitch]=\"step\">\n  <ng-container *ngSwitchCase=\"steps.front\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the front of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.back\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the back of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.ingredients\">\n    <app-camera-ui (captured)=\"doStep($event)\">\n      <div class=\"usage\">Take a photo of the ingredients of the item.</div>\n    </app-camera-ui>\n\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.extra\">\n    <app-camera-ui (captured)=\"doStep($event)\" allowSkip=\"true\">\n      <div class=\"usage\">Take extra photos of the item, or press skip.</div>\n    </app-camera-ui>\n    <ion-fab slot=\"fixed\" vertical=\"top\" horizontal=\"start\">\n      <ion-fab-button [routerLink]=\"['/']\" replaceUrl>\n        <ion-icon icon=\"arrow-back-outline\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"steps.save\">\n    <div class=\"uploading-container\">\n      <div class=\"uploading-message\">\n        <div class=\"uploading-spinner\">\n          <ion-spinner name=\"bubbles\"></ion-spinner>\n        </div>\n        <div class=\"uploading-text\">Uploading {{uploadingText}}...</div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApiProductRequest, ProductsApiService } from \"src/app/api\";\n\nenum Steps {\n  front,\n  back,\n  ingredients,\n  extra,\n  save,\n}\n\n@Component({\n  selector: \"app-add-product\",\n  templateUrl: \"./add-product.page.html\",\n  styleUrls: [\"./add-product.page.scss\"],\n})\nexport class AddProductPage {\n  public step = Steps.front;\n  public readonly steps = Steps;\n  public uploadingText: string;\n\n  private readonly images = {\n    front: undefined as string,\n    back: undefined as string,\n    nutrients: undefined as string,\n    ingredients: undefined as string,\n    extra: [] as string[],\n  };\n\n  public constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly productsApiService: ProductsApiService,\n    private readonly router: Router,\n  ) {}\n\n  public doStep(data: string): void {\n    switch (this.step) {\n      case Steps.front:\n        this.images.front = data;\n        this.step = Steps.back;\n        break;\n      case Steps.back:\n        this.images.back = data;\n        this.step = Steps.ingredients;\n        break;\n      case Steps.ingredients:\n        this.images.ingredients = data;\n        this.step = Steps.extra;\n        break;\n      case Steps.extra:\n        if (data) {\n          this.images.extra.push(data);\n        } else {\n          this.step = Steps.save;\n          void this.save();\n        }\n        break;\n    }\n  }\n\n  public async save(): Promise<void> {\n    const ean = this.activatedRoute.snapshot.paramMap.get(\"ean\");\n\n    const body: ApiProductRequest = {\n      ean,\n      name: ean,\n      brand: null,\n      origin: \"App upload\",\n    };\n\n    this.uploadingText = \"product info\";\n    const product = await this.productsApiService\n      .productsAddProduct({ body })\n      .toPromise();\n\n    if (this.images.front) {\n      this.uploadingText = \"front\";\n      await this.upload(product.id, \"front\", this.images.front);\n    }\n    if (this.images.back) {\n      this.uploadingText = \"back\";\n      await this.upload(product.id, \"back\", this.images.back);\n    }\n    if (this.images.ingredients) {\n      this.uploadingText = \"ingredients\";\n      await this.upload(product.id, \"ingredients\", this.images.ingredients);\n    }\n\n    let count = 0;\n    for (const extra of this.images.extra) {\n      this.uploadingText = `extra ${count++}`;\n      await this.upload(product.id, \"extra\", extra);\n    }\n\n    this.uploadingText = \"done\";\n\n    await this.router.navigate([\"product\", product.id], { replaceUrl: true });\n  }\n\n  private async upload(\n    id: string,\n    usage: string,\n    image: string,\n  ): Promise<void> {\n    await this.productsApiService\n      .productsAddProductImage({\n        productGuid: id,\n        body: {\n          mimeType: \"image/jpeg\",\n          usage: usage,\n          data: image,\n        },\n      })\n      .toPromise();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddProductPage } from './add-product.page';\n\nconst routes: Routes = [\n  {\n    path: ':ean',\n    component: AddProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddProductPageRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { AddProductPageRoutingModule } from \"./add-product-routing.module\";\n\nimport { AddProductPage } from \"./add-product.page\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { ComponentsModule } from \"src/app/components/components.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    AddProductPageRoutingModule,\n    TranslateModule,\n  ],\n  declarations: [AddProductPage],\n})\nexport class AddProductPageModule {}\n"]}