{"version":3,"sources":["webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.page.ts","webpack:///src/app/pages/profile/profile.module.ts"],"names":["routes","path","component","ProfilePage","authenticationService","languageService","userApiService","this","userInfo$","logout","language","region","userUpdateSettings","body","toPromise","refreshToken","ProfilePageRoutingModule","forChild","ProfilePageModule"],"mappings":"+RAmBY,iB,yBAAgC,8B,uCAPxC,QACE,mBACE,0BACE,sBAAqB,2CAAgC,OACvD,OACA,mBACE,uBACE,sBACF,OACA,oBACE,aAAI,SAAiB,OACrB,aAAG,SAAkB,OACvB,OACF,OACA,sBAAiB,2DACf,sBACA,uBAAqB,+CAAmC,OAC1D,OACF,OAEA,oBACE,2BACE,uBAAqB,kCAAsB,OAC7C,OACA,6BACE,uBAAU,0EAAqB,KAAM,EAAF,WACjC,uBAAqB,+BAAmB,OACxC,wBACF,OACA,uBAAU,0EAAqB,KAAM,EAAF,WACjC,uBAAqB,+BAAmB,OACxC,wBACF,OACA,uBAAU,0EAAqB,KAAM,EAAF,WACjC,uBAAqB,+BAAmB,OACxC,wBACF,OACF,OACF,OACA,oBACE,2BACE,uBAAqB,gCAAoB,OAC3C,OACA,6BACE,uBAAU,qFAAyC,SACjD,uBAAqB,6BAAiB,OACtC,wBACF,OACA,uBAAU,qFAAwC,SAChD,uBAAqB,6BAAiB,OACtC,wBACF,OACF,OACF,OACF,O,uBA/Ca,iCAGD,qBACD,sBAaU,mCAmBA,mC,qBAanB,sBC/DN,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCOG,M,MAAMC,EAGX,YACmBC,EACAC,EACAC,GAFA,KAAAF,wBACA,KAAAC,kBACA,KAAAC,iBAEjBC,KAAKC,UAAYJ,EAAsBI,UAG5B,S,yDACLD,KAAKH,sBAAsBK,YAGtB,YAAYC,EAAoBC,G,mDAE3CJ,KAAKF,gBAAgBK,SAAWA,QAE1BH,KAAKD,eACRM,mBAAmB,CAAEC,KAAM,CAAEH,WAAUC,YACvCG,kBAGGP,KAAKH,sBAAsBW,mB,6CAxBxBZ,GAAW,gC,uBAAXA,EAAW,qa,GAAA,MFfxB,qBAEE,sBACE,wBACE,4BACF,OACA,sBAAqB,6BAAkB,OACzC,OACF,OAEA,sBACE,qBACE,gC,gBAuDA,yCAGF,OACF,Q,sBA3DkB,2CAAmD,gB,mSEG9D,KDCA,Y,MAAMa,G,8BAAAA,I,oDAAAA,IAAwB,SAH1B,CAAC,IAAaC,SAASjB,IACtB,O,GAEL,GEKA,Q,MAAMkB,G,8BAAAA,I,oDAAAA,IAAiB,SATnB,CACP,IACA,IACA,IACA,EACA,Q,GAIG","file":"x","sourcesContent":["<ion-header>\n\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/\"></ion-back-button>\n    </ion-buttons>\n    <ion-title translate>profile.page-title</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid fixed>\n    <ng-container *ngIf=\"userInfo$ | async as userInfo; else loading\">\n      <ion-list>\n        <ion-list-header>\n          <ion-label translate>profile.account-management.title</ion-label>\n        </ion-list-header>\n        <ion-item>\n          <ion-avatar slot=\"start\">\n            <img *ngIf=\"userInfo.avatarUrl\" [src]=\"userInfo.avatarUrl\">\n          </ion-avatar>\n          <ion-label>\n            <h3>{{userInfo.name}}</h3>\n            <p>{{userInfo.email}}</p>\n          </ion-label>\n        </ion-item>\n        <ion-item button (click)=\"logout()\">\n          <ion-icon name=\"log-out-outline\" slot=\"start\"></ion-icon>\n          <ion-label translate>profile.account-management.sign-out</ion-label>\n        </ion-item>\n      </ion-list>\n\n      <ion-list>\n        <ion-list-header>\n          <ion-label translate>profile.language.title</ion-label>\n        </ion-list-header>\n        <ion-radio-group [ngModel]=\"userInfo.language\">\n          <ion-item (click)=\"setSettings('en', userInfo.region)\">\n            <ion-label translate>profile.language.en</ion-label>\n            <ion-radio slot=\"start\" value=\"en\"></ion-radio>\n          </ion-item>\n          <ion-item (click)=\"setSettings('ja', userInfo.region)\">\n            <ion-label translate>profile.language.ja</ion-label>\n            <ion-radio slot=\"start\" value=\"ja\"></ion-radio>\n          </ion-item>\n          <ion-item (click)=\"setSettings('nl', userInfo.region)\">\n            <ion-label translate>profile.language.nl</ion-label>\n            <ion-radio slot=\"start\" value=\"nl\"></ion-radio>\n          </ion-item>\n        </ion-radio-group>\n      </ion-list>\n      <ion-list>\n        <ion-list-header>\n          <ion-label translate>profile.region.title</ion-label>\n        </ion-list-header>\n        <ion-radio-group [ngModel]=\"userInfo.region\">\n          <ion-item (click)=\"setSettings( userInfo.language, 'jp')\">\n            <ion-label translate>profile.region.jp</ion-label>\n            <ion-radio slot=\"start\" value=\"jp\"></ion-radio>\n          </ion-item>\n          <ion-item (click)=\"setSettings(userInfo.language, 'nl')\">\n            <ion-label translate>profile.region.nl</ion-label>\n            <ion-radio slot=\"start\" value=\"nl\"></ion-radio>\n          </ion-item>\n        </ion-radio-group>\n      </ion-list>\n    </ng-container>\n    <ng-template #loading>\n      <ion-spinner></ion-spinner>\n    </ng-template>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { UserApiService } from \"src/app/api\";\nimport {\n  AuthenticationService,\n  Language,\n  LanguageService,\n  UserInfo,\n} from \"src/app/services\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage {\n  public readonly userInfo$: Observable<UserInfo>;\n\n  public constructor(\n    private readonly authenticationService: AuthenticationService,\n    private readonly languageService: LanguageService,\n    private readonly userApiService: UserApiService,\n  ) {\n    this.userInfo$ = authenticationService.userInfo$;\n  }\n\n  public async logout(): Promise<void> {\n    await this.authenticationService.logout();\n  }\n\n  public async setSettings(language: Language, region: string): Promise<void> {\n    // pre-set the language for responsiveness\n    this.languageService.language = language;\n\n    await this.userApiService\n      .userUpdateSettings({ body: { language, region } })\n      .toPromise();\n\n    // reload the jwt to enforce settings to all sessions\n    await this.authenticationService.refreshToken();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule { }\n"]}