{"version":3,"sources":["webpack:///src/app/pages/search/search.page.html","webpack:///src/app/pages/search/search-routing.module.ts","webpack:///src/app/pages/search/search.page.ts","webpack:///src/app/pages/search/search.module.ts"],"names":["routes","path","component","SearchPage","activatedRoute","authenticationService","productsApiService","data","this","id$","paramMap","pipe","map","p","get","userInfo$","$searchQuery","value","noData","loadData","event","target","productsSearchProducts","q","searchQuery","skip","length","take","subscribe","result","push","items","disabled","end","complete","ionViewWillEnter","SearchPageRoutingModule","forChild","SearchPageModule"],"mappings":"2UAmBE,qBAEE,4BACE,sBACF,OACF,Q,KAJE,6B,wBAUM,iB,8BAA0B,+B,mEAF9B,qBACE,wBACE,uBACF,OACA,oBACE,aAAI,QAAa,OACjB,aAAI,QAAc,OACpB,OACF,Q,yBARoC,kCAE3B,+BAGD,qBACA,uB,sBAGR,mBACE,iBAAoB,0CAA+B,OACrD,Q,qBASA,sB,qEC3CAA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCKG,M,MAAMC,EAiBX,YACEC,EACAC,EACiBC,GAAA,KAAAA,qBANZ,KAAAC,KAAmC,GAQxCC,KAAKC,IAAML,EAAeM,SAASC,KACjC,OAAAC,EAAA,GAAIC,GAAqB,WAAhBA,EAAEC,IAAI,MAAqB,KAAOD,EAAEC,IAAI,QAEnDN,KAAKO,UAAYV,EAAsBU,UAlBzC,kBAAmC,OAAOP,KAAKQ,aAC/C,gBAAuBC,GACrBT,KAAKQ,aAAeC,EACpBT,KAAKD,KAAO,GACZC,KAAKU,QAAS,EACdV,KAAKW,WAgBM,SAASC,G,mDACpB,MAAMb,EAAOC,KAAKD,KACZc,EAASD,aAAK,EAALA,EAAOC,OAEtBb,KAAKF,mBAAmBgB,uBAAuB,CAC7CC,EAAGf,KAAKgB,YACRC,KAAMlB,EAAKmB,OACXC,KAAM,KACLC,UACDC,IACEtB,EAAKuB,QAAQD,EAAOE,OAEhBvB,KAAKD,OAASA,GAA6B,IAArBC,KAAKD,KAAKmB,SAClClB,KAAKU,QAAS,GAEZG,IACFA,EAAOW,SAAWH,EAAOI,KAAOzB,KAAKD,OAASA,EAC9Cc,EAAOa,iBAMf,WACE1B,KAAK2B,mBAGA,mBACL3B,KAAKgB,YAAc,I,6CAxDVrB,GAAU,gC,uBAAVA,EAAU,o0B,MAAA,MFbvB,uBACE,sBACE,0BAA8E,4D,oBAE9E,OACA,2BACE,qBACF,OACF,OACF,OAEA,sBAEE,oBACE,2BACE,qBACF,OACF,OAEA,2B,iBAOA,sBACE,oBACE,4BASA,6BAGF,OAEA,qCAA8D,uCAAe,EAAAgB,SAAA,MAC3E,0CAEF,OAEA,0CAGF,OACF,Q,MAhDM,gEAD4E,8BAGtC,sCASxB,sCAKuC,qEAS3C,+BASA,gC,sMExBT,KDGA,Y,MAAMiB,G,8BAAAA,I,oDAAAA,IAAuB,SAHzB,CAAC,IAAaC,SAASrC,IACtB,O,GAEL,GEKA,Q,MAAMsC,G,8BAAAA,I,oDAAAA,IAAgB,SATlB,CACP,IACA,IACA,IACA,EACA,Q,GAIG","file":"x","sourcesContent":["<ion-header translucent>\n  <ion-toolbar>\n    <ion-searchbar type=\"text\" color=\"light\" placeholder=\"Search text\" clearInput [(ngModel)]=\"searchQuery\"\n      placeholder=\"{{'food.search.placeholder' | translate}}\">\n    </ion-searchbar>\n    <ion-fab-button slot=\"end\" size=\"small\" [routerLink]=\"['/profile']\">\n      <ion-icon icon=\"person\"></ion-icon>\n    </ion-fab-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"center\">\n    <ion-fab-button [routerLink]=\"['/scan']\">\n      <ion-icon icon=\"barcode-outline\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n\n  <ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\" *ngIf=\"(userInfo$ | async)?.isAdmin\"\n    [routerLink]=\"['/admin']\">\n    <ion-fab-button size=\"small\">\n      <ion-icon icon=\"cog-sharp\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n\n  <ion-grid fixed>\n    <ion-list>\n      <ion-item *ngFor=\"let item of data\" [routerLink]=\"['/product', item.id]\">\n        <ion-avatar slot=\"start\">\n          <img *ngIf=\"!!item.image\" [src]=\"item.image.sq40\">\n        </ion-avatar>\n        <ion-label>\n          <h2>{{item.name}}</h2>\n          <h3>{{item.brand}}</h3>\n        </ion-label>\n      </ion-item>\n      <ion-item *ngIf=\"noData\">\n        <div class=\"nodata\">Nothing found that matches your</div>\n      </ion-item>\n    </ion-list>\n\n    <ion-infinite-scroll #infiniteScrollElement threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n      <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Loading more data...\">\n      </ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n    <ng-template #loading>\n      <ion-spinner></ion-spinner>\n    </ng-template>\n  </ion-grid>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IonInfiniteScroll, ViewWillEnter } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiProductSearchResponse, ProductsApiService } from 'src/app/api';\nimport { AuthenticationService, UserInfo } from 'src/app/services';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit, ViewWillEnter {\n  private $searchQuery: string;\n\n  public readonly data$: Observable<Array<ApiProductSearchResponse>>;\n  public readonly id$: Observable<string>;\n  public readonly userInfo$: Observable<UserInfo>;\n\n  public get searchQuery(): string { return this.$searchQuery; }\n  public set searchQuery(value: string) {\n    this.$searchQuery = value;\n    this.data = [];\n    this.noData = false;\n    this.loadData();\n  }\n  public data: ApiProductSearchResponse[] = [];\n  public noData: boolean;\n\n  constructor(\n    activatedRoute: ActivatedRoute,\n    authenticationService: AuthenticationService,\n    private readonly productsApiService: ProductsApiService\n  ) {\n    this.id$ = activatedRoute.paramMap.pipe(\n      map(p => p.get('id') === 'search' ? null : p.get('id'))\n    );\n    this.userInfo$ = authenticationService.userInfo$;\n  }\n\n  public async loadData(event?: CustomEvent) {\n    const data = this.data;\n    const target = event?.target as any as IonInfiniteScroll;\n\n    this.productsApiService.productsSearchProducts({\n      q: this.searchQuery,\n      skip: data.length,\n      take: 25\n    }).subscribe(\n      result => {\n        data.push(...result.items);\n\n        if (this.data === data && this.data.length === 0) {\n          this.noData = false;\n        }\n        if (target) {\n          target.disabled = result.end && this.data === data;\n          target.complete();\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.ionViewWillEnter();\n  }\n\n  public ionViewWillEnter() {\n    this.searchQuery = '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SearchPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [SearchPage]\n})\nexport class SearchPageModule {}\n"]}